[
{
    "pk": 1, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "https{0,1}://\\S*?flickr.com/\\S*", 
        "simple": false, 
        "endpoint": "http://www.flickr.com/services/oembed/", 
        "name": "Flickr", 
        "format": 1
    }
},
{
    "pk": 2, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://\\S*?viddler.com/\\S*", 
        "simple": false, 
        "endpoint": "http://lab.viddler.com/services/oembed/", 
        "name": "Viddler", 
        "format": 1
    }
},
{
    "pk": 3, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://qik.com/\\S*", 
        "simple": false, 
        "endpoint": "http://qik.com/api/oembed.json", 
        "name": "Qik", 
        "format": 1
    }
},
{
    "pk": 4, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://\\S*?pownce.com/\\S*", 
        "simple": false, 
        "endpoint": "http://api.pownce.com/2.1/oembed.json", 
        "name": "Pownce", 
        "format": 1
    }
},
{
    "pk": 5, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://\\S*?revision3.com/\\S*", 
        "simple": false, 
        "endpoint": "http://revision3.com/api/oembed/", 
        "name": "Revision3", 
        "format": 1
    }
},
{
    "pk": 6, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://\\S*.collegehumor.com/video:\\S*", 
        "simple": false, 
        "endpoint": "http://oohembed.com/oohembed/", 
        "name": "CollegeHumor Video (OohEmbed)", 
        "format": 1
    }
},
{
    "pk": 7, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://\\S*.funnyordie.com/videos/\\S*", 
        "simple": false, 
        "endpoint": "http://oohembed.com/oohembed/", 
        "name": "Funny or Die Video (OohEmbed)", 
        "format": 1
    }
},
{
    "pk": 8, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://video.google.com/videoplay?\\S*", 
        "simple": false, 
        "endpoint": "http://oohembed.com/oohembed/", 
        "name": "Google Video (OohEmbed)", 
        "format": 1
    }
},
{
    "pk": 9, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://www.hulu.com/watch/\\S*", 
        "simple": false, 
        "endpoint": "http://oohembed.com/oohembed/", 
        "name": "Hulu (OohEmbed)", 
        "format": 1
    }
},
{
    "pk": 10, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://\\S*.metacafe.com/watch/\\S*", 
        "simple": false, 
        "endpoint": "http://oohembed.com/oohembed/", 
        "name": "Metacafe (OohEmbed)", 
        "format": 1
    }
},
{
    "pk": 11, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "https?://twitter.com/\\S*/status(es)?/\\S*", 
        "simple": false, 
        "endpoint": "https://api.twitter.com/1/statuses/oembed.json", 
        "name": "Twitter Status", 
        "format": 1
    }
},
{
    "pk": 12, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://\\S*.wikipedia.org/wiki/\\S*", 
        "simple": false, 
        "endpoint": "http://oohembed.com/oohembed/", 
        "name": "Wikipedia (OohEmbed)", 
        "format": 1
    }
},
{
    "pk": 13, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "((http|https)://\\S*.?youtube.com/watch\\S*|(http|https)://youtu.be/\\S*)", 
        "simple": false, 
        "endpoint": "http://www.youtube.com/oembed", 
        "name": "YouTube", 
        "format": 1
    }
},
{
    "pk": 14, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)?://vimeo.com/.*\\d+", 
        "simple": false, 
        "endpoint": "http://vimeo.com/api/oembed.json", 
        "name": "Vimeo", 
        "format": 1
    }
},
{
    "pk": 15, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://www.slideshare.net/\\S*/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "SlideShare (Embedly)", 
        "format": 1
    }
},
{
    "pk": 16, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://\\S*.scribd.com/doc/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Scribd (Embedly)", 
        "format": 1
    }
},
{
    "pk": 17, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://screenr.com/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Screenr (Embedly)", 
        "format": 1
    }
},
{
    "pk": 18, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://www.5min.com/Video/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "5min (Embedly)", 
        "format": 1
    }
},
{
    "pk": 19, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://www.howcast.com/videos/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Howcast (Embedly)", 
        "format": 1
    }
},
{
    "pk": 20, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http://\\S*?screencast.com/\\S*/media/\\S*|http://\\S*?screencast.com/t/\\S*)", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Screencast (Embedly)", 
        "format": 1
    }
},
{
    "pk": 21, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://www.clearspring.com/widgets/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Clearspring (Embedly)", 
        "format": 1
    }
},
{
    "pk": 22, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http://my.opera.com/\\S*/albums/show.dml\\?id=\\S*|http://my.opera.com/\\S*/albums/showpic.dml\\?album=\\S*&picture=\\S*)", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "My Opera (Embedly)", 
        "format": 1
    }
},
{
    "pk": 23, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://\\S*yfrog.\\S*/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Yfrog (Embedly)", 
        "format": 1
    }
},
{
    "pk": 24, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://tweetphoto.com/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "TweetPhoto (Embedly)", 
        "format": 1
    }
},
{
    "pk": 25, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://\\S*twitpic.com/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "TwitPic (Embedly)", 
        "format": 1
    }
},
{
    "pk": 26, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://\\S*imgur.com/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Imgur (Embedly)", 
        "format": 1
    }
},
{
    "pk": 27, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://twitgoo.com/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "TwitGoo (Embedly)", 
        "format": 1
    }
},
{
    "pk": 28, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http://i\\S*.photobucket.com/albums/\\S*|http://gi\\S*.photobucket.com/groups/\\S*)", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Photobucket (Embedly)", 
        "format": 1
    }
},
{
    "pk": 29, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://phodroid.com/\\S*/\\S*/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Phodroid (Embedly)", 
        "format": 1
    }
},
{
    "pk": 30, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://xkcd.com/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "xkcd (Embedly)", 
        "format": 1
    }
},
{
    "pk": 31, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://\\S*?23hq.com/\\S*/photo/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "23 HQ (Embedly)", 
        "format": 1
    }
},
{
    "pk": 32, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http://\\S*amazon.\\S*/gp/product/\\S*|http://\\S*amazon.\\S*/\\S*/dp/\\S*|http://\\S*amazon.\\S*/dp/\\S*|http://\\S*amazon.\\S*/o/ASIN/\\S*|http://\\S*amazon.\\S*/gp/offer-listing/\\S*|http://\\S*amazon.\\S*/\\S*/ASIN/\\S*|http://\\S*amazon.\\S*/gp/product/images/\\S*)", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Amazon (Embedly)", 
        "format": 1
    }
},
{
    "pk": 33, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://www.veoh.com/\\S*/watch/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Veoh (Embedly)", 
        "format": 1
    }
},
{
    "pk": 34, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://\\S*justin.tv/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Justin.tv (Embedly)", 
        "format": 1
    }
},
{
    "pk": 35, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://www.ustream.tv/(recorded|channel)/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "UStream (Embedly)", 
        "format": 1
    }
},
{
    "pk": 36, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http://\\S*.dailymotion.com/video/\\S*|http://\\S*.dailymotion.com/\\S*/video/\\S*)", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Daily Motion (Embedly)", 
        "format": 1
    }
},
{
    "pk": 37, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://www.twitvid.com/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "TwitVid (Embedly)", 
        "format": 1
    }
},
{
    "pk": 38, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://www.break.com/\\S*/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Break.com (Embedly)", 
        "format": 1
    }
},
{
    "pk": 39, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://(www|vids).myspace.com/index.cfm\\?fuseaction=\\S*&videoid\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Myspace Videos (Embedly)", 
        "format": 1
    }
},
{
    "pk": 40, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://\\S*blip.tv/file/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Blip.tv (Embedly)", 
        "format": 1
    }
},
{
    "pk": 41, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://\\S*revver.com/video/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Revver (Embedly)", 
        "format": 1
    }
},
{
    "pk": 42, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http://video.yahoo.com/watch/\\S*/\\S*|http://video.yahoo.com/network/\\S*)", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Yahoo! Video (Embedly)", 
        "format": 1
    }
},
{
    "pk": 43, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://\\S*?liveleak.com/view?\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "LiveLeak (Embedly)", 
        "format": 1
    }
},
{
    "pk": 44, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://animoto.com/(play|s)/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Animoto (Embedly)", 
        "format": 1
    }
},
{
    "pk": 45, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://dotsub.com/view/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "dotSUB (Embedly)", 
        "format": 1
    }
},
{
    "pk": 46, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://soundcloud.com/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "SoundCloud (Embedly)", 
        "format": 1
    }
},
{
    "pk": 47, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://www.lala.com/#*(album|song)/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Lala (Embedly)", 
        "format": 1
    }
},
{
    "pk": 48, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http://movieclips.com/watch/\\S*/\\S*/|http://movieclips.com/watch/\\S*/\\S*/\\S*/\\S*)", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Movie Clips (Embedly)", 
        "format": 1
    }
},
{
    "pk": 49, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://\\S*crackle.com/c/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Crackle (Embedly)", 
        "format": 1
    }
},
{
    "pk": 50, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://www.fancast.com/\\S*/videos", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Fancast (Embedly)", 
        "format": 1
    }
},
{
    "pk": 51, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://www.ted.com/talks/\\S*.html", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "TED (Embedly)", 
        "format": 1
    }
},
{
    "pk": 52, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://\\S*omnisio.com/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Omnisio (Embedly)", 
        "format": 1
    }
},
{
    "pk": 53, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://\\S*nfb.ca/film/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "NFB (Embedly)", 
        "format": 1
    }
},
{
    "pk": 54, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http://www.thedailyshow.com/(watch|full-episodes)/\\S*|http://www.thedailyshow.com/collection/\\S*/\\S*/\\S*)", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "The Daily Show (Embedly)", 
        "format": 1
    }
},
{
    "pk": 55, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://movies.yahoo.com/movie/\\S*/(video|info|trailer)/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Yahoo! Movies", 
        "format": 1
    }
},
{
    "pk": 56, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://www.colbertnation.com/(the-colbert-report-collections|full-episodes|the-colbert-report-videos)/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Colbert Nation (Embedly)", 
        "format": 1
    }
},
{
    "pk": 57, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://www.comedycentral.com/videos/index.jhtml?\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Comedy Central (Embedly)", 
        "format": 1
    }
},
{
    "pk": 58, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://\\S*theonion.com/video/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "The Onion (Embedly)", 
        "format": 1
    }
},
{
    "pk": 59, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://wordpress.tv/\\S*/\\S*/\\S*/\\S*/", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "WordPress TV (Embedly)", 
        "format": 1
    }
},
{
    "pk": 60, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://www.traileraddict.com/(trailer|clip|poster)/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "Trailer Addict (Embedly)", 
        "format": 1
    }
},
{
    "pk": 61, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://www.escapistmagazine.com/videos/\\S*", 
        "simple": false, 
        "endpoint": "http://api.embed.ly/v1/api/oembed", 
        "name": "The Escapist (Embedly)", 
        "format": 1
    }
},
{
    "pk": 62, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "(http|https)://official\\.fm/[\\w\\-\\.~%/\\?#@!$&'\\(\\)\\*\\+,;=]*", 
        "simple": false, 
        "endpoint": "http://official.fm/services/oembed", 
        "name": "official.fm", 
        "format": 1
    }
},
{
    "pk": 63, 
    "model": "oembed.providerrule", 
    "fields": {
        "regex": "https?://twitter.com/\\S*/status(es)?/\\S*", 
        "simple": true, 
        "endpoint": "https://api.twitter.com/1/statuses/oembed.json?hide_media=true&hide_thread=true&omit_script=true", 
        "name": "Twitter Status (Simple)", 
        "format": 1
    }
}
]
